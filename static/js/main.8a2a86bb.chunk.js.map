{"version":3,"sources":["assets/heart_icon.png","App.js","pages/TopPage.js","pages/QuizPage.js","pages/ResultPage.js","index.js"],"names":["module","exports","__webpack_require__","p","App","navigate","useNavigate","React","createElement","className","onClick","handleButtonClick","TopPage","difficulty","setDifficulty","useState","value","onChange","e","target","handleStartQuiz","state","range","questionCount","QuizPage","location","useLocation","questionIndex","setQuestionIndex","life","setLife","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","isCorrect","setIsCorrect","startTime","setStartTime","Date","now","countdown","setCountdown","formatTime","milliseconds","minutes","Math","floor","seconds","millisecondsRemaining","String","padStart","moveToNextQuestion","useCallback","length","timeTaken","setTimeout","correctAnswers","totalQuestions","handleAnswer","option","correct","correctAnswer","timer","setInterval","prevCountdown","clearInterval","initializeQuiz","filteredMembers","membersData","members","console","error","indices","Array","from","_","i","j","random","selectedQuestions","question","push","questionText","questionColors","colors","name","options","shuffleOptions","useEffect","shuffledMembers","_shuffledMembers$spli","randomIndex","splice","includes","sort","key","src","heartIcon","alt","style","width","height","map","index","backgroundColor","disabled","fontSize","marginTop","ResultPage","handleReturnToTop","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router","basename","Routes","Route","path","element"],"mappings":"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","file":"static/js/main.8a2a86bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart_icon.ceccbad4.png\";","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const navigate = useNavigate();\n\n  const handleButtonClick = () => {\n    navigate('/top'); // /top に遷移\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Welcome to the Unofficial Hinatazaka Quiz App</h1>\n        <button className=\"custom-button\" onClick={handleButtonClick}>ペンライトクイズ</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction TopPage() {\r\n  const navigate = useNavigate();\r\n  const [difficulty, setDifficulty] = useState('easy');\r\n\r\n  const handleStartQuiz = () => {\r\n    navigate('/quiz', { state: { difficulty, range: 'all', questionCount: 'all' } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"top-page\">\r\n      <h1>日向坂46<br/>ペンライトカラークイズ</h1>\r\n\r\n      <div>\r\n        <label>難易度を選択:</label>\r\n        <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\r\n          <option value=\"easy\">イージー</option>\r\n          <option value=\"normal\">ノーマル</option>\r\n          <option value=\"hard\">ハード</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"buttons-container\">\r\n        <button className=\"custom-button\" onClick={handleStartQuiz}>スタート</button>      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopPage;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport membersData from '../data/members.json';\r\nimport heartIcon from '../assets/heart_icon.png';\r\n\r\nconst QuizPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { difficulty } = location.state;\r\n\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [life, setLife] = useState(difficulty === 'easy' ? 3 : difficulty === 'normal' || difficulty === 'hard' ? 2 : 1);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [countdown, setCountdown] = useState(null);\r\n\r\n  // 経過時間をMM:SS.NNN形式でフォーマットする関数\r\n  const formatTime = (milliseconds) => {\r\n    const minutes = Math.floor(milliseconds / 60000);\r\n    const seconds = Math.floor((milliseconds % 60000) / 1000);\r\n    const millisecondsRemaining = milliseconds % 1000;\r\n\r\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(millisecondsRemaining).padStart(3, '0')}`;\r\n  };\r\n\r\n  const moveToNextQuestion = useCallback(() => {\r\n    if (questionIndex + 1 < questions.length) {\r\n      setQuestionIndex(questionIndex + 1);\r\n      setCurrentQuestion(questions[questionIndex + 1]);\r\n      setSelectedOption(null);\r\n      setCountdown(null);\r\n    } else {\r\n      const timeTaken = formatTime(Date.now() - startTime);\r\n      setTimeout(() => {\r\n        navigate('/result', { state: { correctAnswers: questionIndex + 1, totalQuestions: questions.length, timeTaken } });\r\n      }, 3000); // 3秒待機\r\n    }\r\n  }, [navigate, questions, questionIndex, startTime]);\r\n\r\n  const handleAnswer = useCallback((option) => {\r\n    setSelectedOption(option);\r\n    const correct = option === currentQuestion.correctAnswer;\r\n    setIsCorrect(correct);\r\n\r\n    if (!correct) {\r\n      setLife(life - 1);\r\n      if (life - 1 === 0) {\r\n        const timeTaken = formatTime(Date.now() - startTime);\r\n        setTimeout(() => {\r\n          navigate('/result', { state: { correctAnswers: questionIndex, totalQuestions: questions.length, timeTaken } });\r\n        }, 3000); // 3秒待機\r\n        return;\r\n      }\r\n    }\r\n\r\n    setCountdown(3);\r\n\r\n    const timer = setInterval(() => {\r\n      setCountdown((prevCountdown) => {\r\n        if (prevCountdown === 1) {\r\n          clearInterval(timer);\r\n          moveToNextQuestion();\r\n        }\r\n        return prevCountdown - 1;\r\n      });\r\n    }, 1000);\r\n  }, [life, questionIndex, questions, navigate, startTime, currentQuestion, moveToNextQuestion]);\r\n\r\n  const initializeQuiz = useCallback(() => {\r\n    setStartTime(Date.now());\r\n    setQuestionIndex(0);\r\n    setLife(difficulty === 'easy' ? 3 : difficulty === 'normal' ? 2 : 1);\r\n\r\n    let filteredMembers = membersData.members;\r\n\r\n    if (filteredMembers.length === 0) {\r\n      console.error(\"該当するメンバーがいません\");\r\n      navigate('/top');\r\n      return;\r\n    }\r\n\r\n    const indices = Array.from({ length: filteredMembers.length }, (_, i) => i);\r\n    for (let i = indices.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [indices[i], indices[j]] = [indices[j], indices[i]];\r\n    }\r\n\r\n    const selectedQuestions = [];\r\n    for (let i = 0; i < indices.length; i++) {\r\n      const question = filteredMembers[indices[i]];\r\n      selectedQuestions.push({\r\n        questionText: `このペンライトカラーのメンバーは誰？`,\r\n        questionColors: `${question.colors[0]} × ${question.colors[1]}`,\r\n        correctAnswer: question.name,\r\n        options: shuffleOptions(filteredMembers, question.name)\r\n      });\r\n    }\r\n\r\n    setQuestions(selectedQuestions);\r\n    setCurrentQuestion(selectedQuestions[0]);\r\n  }, [difficulty, navigate]);\r\n\r\n  useEffect(() => {\r\n    initializeQuiz();  // クイズページがロードされた時にクイズを初期化\r\n  }, [initializeQuiz]);\r\n\r\n  const shuffleOptions = (members, correctAnswer) => {\r\n    const shuffledMembers = [...members];\r\n    const options = [correctAnswer];\r\n\r\n    while (options.length < 4) {\r\n      if (shuffledMembers.length === 0) {\r\n        console.error(\"選択肢を生成できるメンバーが不足しています\");\r\n        break;\r\n      }\r\n      const randomIndex = Math.floor(Math.random() * shuffledMembers.length);\r\n      const option = shuffledMembers.splice(randomIndex, 1)[0]?.name;\r\n\r\n      if (option && !options.includes(option)) {\r\n        options.push(option);\r\n      }\r\n    }\r\n\r\n    return options.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const renderHearts = () => {\r\n    return Array.from({ length: life }, (_, i) => (\r\n      <img key={i} src={heartIcon} alt=\"Heart\" style={{ width: '20px', height: '20px' }} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1>クイズ画面</h1>\r\n      <div className=\"hearts\">\r\n        {renderHearts()}\r\n      </div>\r\n      <div>\r\n        <p>{currentQuestion.questionText}</p>\r\n        <p>{currentQuestion.questionColors}</p>\r\n      </div>\r\n      <div className=\"quiz-options\">\r\n        {currentQuestion.options && currentQuestion.options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleAnswer(option)}\r\n            style={{\r\n              backgroundColor:\r\n                selectedOption === option\r\n                  ? isCorrect\r\n                    ? '#00aaff'\r\n                    : '#ff6666'\r\n                  : option === currentQuestion.correctAnswer && selectedOption !== null\r\n                  ? '#00aaff'\r\n                  : ''\r\n            }}\r\n            disabled={selectedOption !== null}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {countdown !== null && (\r\n        <div style={{ fontSize: '24px', marginTop: '20px' }}>\r\n          次の出題まで {countdown} \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst ResultPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { correctAnswers, totalQuestions, timeTaken } = location.state;\r\n\r\n  const handleReturnToTop = () => {\r\n    navigate('/top');\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-container\">\r\n      <h1>結果発表</h1>\r\n      <p>正解数: {correctAnswers} / {totalQuestions}</p>\r\n      <p>所要時間: {timeTaken}</p>\r\n      <button onClick={handleReturnToTop}>トップページへ</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPage;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport TopPage from './pages/TopPage';\nimport QuizPage from './pages/QuizPage';  // 次のステップで実装します\nimport ResultPage from './pages/ResultPage';  // ResultPage のインポート\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router basename=\"/hinatazaka_pen_light_color_quiz\">\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/top\" element={<TopPage />} />\n        <Route path=\"/quiz\" element={<QuizPage />} />\n        <Route path=\"/result\" element={<ResultPage />} />  {/* 結果画面のルートを追加 */}\n      </Routes>\n    </Router>\n  </React.StrictMode>\n);"],"sourceRoot":""}